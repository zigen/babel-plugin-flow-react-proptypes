// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`class-single-type-anon-test 1`] = `
"'use strict';

Object.defineProperty(exports, \\"__esModule\\", {
  value: true
});
exports.bpfrpt_proptype_BarProps = undefined;

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\"Cannot call a class as a function\\"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\"this hasn't been initialised - super() hasn't been called\\"); } return call && (typeof call === \\"object\\" || typeof call === \\"function\\") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== \\"function\\" && superClass !== null) { throw new TypeError(\\"Super expression must either be null or a function, not \\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var React = require('react');

var bpfrpt_proptype_BarProps = {
  a_number: _propTypes2.default.number.isRequired,
  b_bool: _propTypes2.default.bool
};

var _class = function (_React$Component) {
  _inherits(_class, _React$Component);

  function _class() {
    _classCallCheck(this, _class);

    return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));
  }

  return _class;
}(React.Component);

_class.propTypes = {
  a_number: _propTypes2.default.number,
  b_bool: _propTypes2.default.bool
};
exports.default = _class;
exports.bpfrpt_proptype_BarProps = bpfrpt_proptype_BarProps;"
`;
